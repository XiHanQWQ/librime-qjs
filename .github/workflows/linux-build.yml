name: Linux build
on:
  workflow_call:
    inputs:
      repository:
        default: ${{ github.repository }}
        required: false
        type: string
      ref:
        default: ${{ github.ref_name }}
        required: false
        type: string
      rime_plugins:
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang-19]
        include:
          - compiler: gcc
            cxx_compiler: g++
          - compiler: clang-19
            cxx_compiler: clang++-19
    env:
      CC: ${{ matrix.compiler }}
      CXX: ${{ matrix.cxx_compiler }}
      RIME_PLUGINS: ${{ inputs.rime_plugins }}
    steps:
      # - name: Configure tmate scrolling
      #   # in copy mode (press Ctrl-b [ then use arrow keys or Page Up/Page Down)
      #   run: |
      #     mkdir -p ~/.tmate
      #     echo "set -g history-limit 50000" > ~/.tmate.conf
      #     echo "set -g terminal-overrides 'xterm*:smcup@:rmcup@'" >> ~/.tmate.conf
      # - name: Setup tmate session
      #   if: matrix.compiler == 'clang-19'
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     limit-access-to-actor: true
      #     timeout-minutes: 360
      #     detached: true

      - name: Checkout last commit
        uses: actions/checkout@v5
        with:
          # Repository to check out (format: owner/repo)
          repository: ${{ inputs.repository }}   # optional, defaults to current repository
          # The branch, tag or SHA to checkout
          ref: ${{ inputs.ref }}                 # optional, defaults to the branch triggering the workflow

      - name: Install dependency
        run: ./action-install-linux.sh

      - name: Install Rime plugins
        run: ./action-install-plugins-linux.sh

      - name: Install clang-19
        if: matrix.compiler == 'clang-19'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-19

      - name: Build and test
        run: make test
        env:
          CMAKE_GENERATOR: Ninja

      - name: Detect Memory Leak
        if: matrix.compiler == 'clang-19'
        run: |
          make clean
          make test-debug CFLAGS="-g -fsanitize=address" LDFLAGS="-fsanitize=address"
          ASAN_OPTIONS=detect_leaks=1 ./plugins/qjs/build/librime-qjs-tests
        env:
          CMAKE_GENERATOR: Ninja
